@model AppRegistroEstudiantes.Models.Registro

@{
    ViewBag.Title = "Registro - Editar";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Editar Registro</h4>
        <hr />
        <div class="card">
            <div class="card-header">
                @Html.ActionLink("Volver Atrás", "Index", "Registro", null, new { @class = "btn btn-secondary" })
                <input type="submit" value="Actualizar" class="btn btn-primary" />
            </div>
            <div class="card-body">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)
                <div class="form-row">
                    <div class="form-group col-md-3">
                        @Html.LabelFor(model => model.AlumnoID, "Alumno", htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownList("AlumnoID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.AlumnoID, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-2">
                        @Html.LabelFor(model => model.CursoID, "Curso", htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownList("CursoID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CursoID, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-2">
                        @Html.LabelFor(model => model.FechaInscripcion, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.FechaInscripcion, new { htmlAttributes = new { @class = "form-control", @Value = Model.FechaInscripcion.ToString("yyyy-MM-dd") } })
                        @Html.ValidationMessageFor(model => model.FechaInscripcion, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-2">
                        @Html.LabelFor(model => model.Matricula, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Matricula, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Matricula, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-2">
                        @Html.LabelFor(model => model.Beca, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Beca, new { htmlAttributes = new { @class = "form-control", @type = "number", @min = "0", @step = "0.01", @Value = Model.Beca } })
                        @Html.ValidationMessageFor(model => model.Beca, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group col-md-3">
                        @Html.LabelFor(model => model.Observacion1, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Observacion1, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Observacion1, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-3">
                        @Html.LabelFor(model => model.Observacion2, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Observacion2, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Observacion2, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-1 text-center">
                        @Html.LabelFor(model => model.EsTraspaso, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.EsTraspaso)
                        @Html.ValidationMessageFor(model => model.EsTraspaso, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-1 text-center">
                        @Html.LabelFor(model => model.EsBecado, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.EsBecado, new { htmlAttributes = new { @onclick = "switchDisableInputBeca()" } })
                        @Html.ValidationMessageFor(model => model.EsBecado, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-1 text-center">
                        @Html.LabelFor(model => model.EsRepitente, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.EsRepitente)
                        @Html.ValidationMessageFor(model => model.EsRepitente, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-1 text-center">
                        @*@Html.LabelFor(model => model.Estado, htmlAttributes: new { @class = "control-label" })*@
                        <div>
                            @Html.EditorFor(model => model.Estado, new { htmlAttributes = new { @class = "d-none" } })
                            @Html.ValidationMessageFor(model => model.Estado, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        let checkbox = document.getElementById("EsBecado");
        document.getElementById("Beca").disabled = !checkbox.checked;
        function switchDisableInputBeca() {
            if (checkbox.checked) {
                document.getElementById("Beca").disabled = !checkbox.checked;
            } else {
                document.getElementById("Beca").disabled = !checkbox.checked;
                document.getElementById("Beca").value = "0.00";
            }
            
        }
    </script>
}
