@model AppRegistroEstudiantes.Models.Registro

@{
    ViewBag.Title = "Registro - Nuevo";
}

<div class="form-horizontal" id="context">
    <h4>{{title}}</h4>
    <hr />
    <div class="card">
        <form action="@Url.Action("Create", "Registro")" method="post" @@submit="checkForm">
            @Html.AntiForgeryToken()
            <div class="card-header">
                @Html.ActionLink("Volver Atrás", "Index", "Registro", null, new { @class = "btn btn-secondary mr-1" })
                <input type="submit" value="Guardar" class="btn btn-primary" />
            </div>
            <div class="card-body">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-row">
                    <div class="form-group col-md-3">
                        @Html.LabelFor(model => model.AlumnoID, "Alumno", htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownList("AlumnoID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.AlumnoID, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-2">
                        @Html.LabelFor(model => model.CursoID, "Curso", htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownList("CursoID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CursoID, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-2">
                        @Html.LabelFor(model => model.FechaInscripcion, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.FechaInscripcion, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FechaInscripcion, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-2">
                        @Html.LabelFor(model => model.Matricula, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Matricula, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Matricula, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-2">
                        @Html.LabelFor(model => model.Beca, htmlAttributes: new { @class = "control-label" })
                        <input class="form-control"
                               id="Beca"
                               min="0"
                               name="Beca"
                               step="0.01"
                               type="number"
                               v-model="Beca.value"
                               v-bind:disabled="Beca.disabled">
                        @Html.ValidationMessageFor(model => model.Beca, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group col-md-3">
                        @Html.LabelFor(model => model.Observacion1, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Observacion1, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Observacion1, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-3">
                        @Html.LabelFor(model => model.Observacion2, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Observacion2, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Observacion2, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-1 text-center">
                        @Html.LabelFor(model => model.EsTraspaso, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.EsTraspaso)
                        @Html.ValidationMessageFor(model => model.EsTraspaso, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-1 text-center">
                        @Html.LabelFor(model => model.EsBecado, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.EsBecado, new
                        {
                            htmlAttributes = new Dictionary<string, object> {
                            { "v-model", "esBecado" },
                            { "@change", "switchDisableInputBeca" },
                        }
                        })
                        @Html.ValidationMessageFor(model => model.EsBecado, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-1 text-center">
                        @Html.LabelFor(model => model.EsRepitente, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.EsRepitente)
                        @Html.ValidationMessageFor(model => model.EsRepitente, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-1 text-center">
                        <div>
                            @Html.CheckBox("Estado", true, new { @class = "check-box d-none" })
                            @Html.ValidationMessageFor(model => model.Estado, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        Vue.createApp({
            setup() {
                const title = 'Crear Nuevo Registro'; // no es reactivo
                const Beca = Vue.reactive({
                    value: 0,
                    disabled: true,
                });
                const esBecado = Vue.ref(false);
                const switchDisableInputBeca = () => {
                    Beca.disabled = !esBecado.value;
                    Beca.value = 0;
                };

                function checkForm(e) {
                    const form = new FormData();
                    form.append("__RequestVerificationToken", e.target["__RequestVerificationToken"].value);
                    form.append("AlumnoID", e.target["AlumnoID"].value);
                    form.append("CursoID", e.target["CursoID"].value);
                    form.append("FechaInscripcion", e.target["FechaInscripcion"].value);
                    form.append("Matricula", e.target["Matricula"].value);
                    form.append("Beca", Beca.value);
                    form.append("Observacion1", e.target["Observacion1"].value);
                    form.append("Observacion2", e.target["Observacion2"].value);
                    form.append("EsTraspaso", e.target["EsTraspaso"][0].checked);
                    form.append("EsBecado", esBecado.value);
                    form.append("EsRepitente", e.target["EsRepitente"][0].checked);
                    form.append("Estado", true);
                    fetch("/Registro/Create", {
                        method: "POST",
                        body: form
                    });
                    e.preventDefault();
                }
                return {
                    title,
                    Beca,
                    esBecado,
                    switchDisableInputBeca,
                    checkForm
                };
            }
        }).mount('#context');
    </script>
}
